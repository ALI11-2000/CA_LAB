$date
	Mon Nov  1 12:10:03 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module top $end
$var wire 1 ! clk $end
$var wire 1 " hard_write $end
$var wire 32 # num1 [31:0] $end
$var wire 32 $ num2 [31:0] $end
$var wire 1 % rst $end
$var wire 32 & x9 [31:0] $end
$var wire 32 ' x8 [31:0] $end
$var wire 32 ( x7 [31:0] $end
$var wire 32 ) x6 [31:0] $end
$var wire 32 * x5 [31:0] $end
$var wire 32 + x4 [31:0] $end
$var wire 32 , x31 [31:0] $end
$var wire 32 - x30 [31:0] $end
$var wire 32 . x3 [31:0] $end
$var wire 32 / x29 [31:0] $end
$var wire 32 0 x28 [31:0] $end
$var wire 32 1 x27 [31:0] $end
$var wire 32 2 x26 [31:0] $end
$var wire 32 3 x25 [31:0] $end
$var wire 32 4 x24 [31:0] $end
$var wire 32 5 x23 [31:0] $end
$var wire 32 6 x22 [31:0] $end
$var wire 32 7 x21 [31:0] $end
$var wire 32 8 x20 [31:0] $end
$var wire 32 9 x2 [31:0] $end
$var wire 32 : x19 [31:0] $end
$var wire 32 ; x18 [31:0] $end
$var wire 32 < x17 [31:0] $end
$var wire 32 = x16 [31:0] $end
$var wire 32 > x15 [31:0] $end
$var wire 32 ? x14 [31:0] $end
$var wire 32 @ x13 [31:0] $end
$var wire 32 A x12 [31:0] $end
$var wire 32 B x11 [31:0] $end
$var wire 32 C x10 [31:0] $end
$var wire 32 D x1 [31:0] $end
$var wire 32 E x0 [31:0] $end
$var wire 1 F wr_en $end
$var wire 2 G wb_sel [1:0] $end
$var wire 1 H unsign $end
$var wire 1 I sel_B $end
$var wire 1 J sel_A $end
$var wire 32 K result [31:0] $end
$var wire 1 L reg_wr $end
$var wire 32 M rdata2 [31:0] $end
$var wire 32 N rdata1 [31:0] $end
$var wire 32 O rdata [31:0] $end
$var wire 1 P rd_en $end
$var wire 3 Q br_type [2:0] $end
$var wire 1 R br_taken $end
$var wire 4 S alu_op [3:0] $end
$var wire 32 T PC [31:0] $end
$var wire 32 U Instruction [31:0] $end
$var wire 32 V Immediate_Value [31:0] $end
$var wire 32 W ALU_out [31:0] $end
$var reg 32 X A [31:0] $end
$var reg 32 Y B [31:0] $end
$var reg 32 Z wdata [31:0] $end
$scope module al $end
$var wire 32 [ A [31:0] $end
$var wire 32 \ B [31:0] $end
$var wire 4 ] alu_op [3:0] $end
$var reg 32 ^ ALU_out [31:0] $end
$upscope $end
$scope module bcond $end
$var wire 3 _ br_type [2:0] $end
$var wire 32 ` B [31:0] $end
$var wire 32 a A [31:0] $end
$var reg 1 R br_taken $end
$upscope $end
$scope module cont $end
$var wire 7 b opcode [6:0] $end
$var wire 7 c func7 [6:0] $end
$var wire 3 d func3 [2:0] $end
$var wire 32 e Instruction [31:0] $end
$var reg 4 f alu_op [3:0] $end
$var reg 3 g br_type [2:0] $end
$var reg 1 P rd_en $end
$var reg 1 L reg_wr $end
$var reg 1 J sel_A $end
$var reg 1 I sel_B $end
$var reg 1 H unsign $end
$var reg 2 h wb_sel [1:0] $end
$var reg 1 F wr_en $end
$upscope $end
$scope module dmem $end
$var wire 32 i addr [31:0] $end
$var wire 1 ! clk $end
$var wire 1 " hard_write $end
$var wire 32 j num1 [31:0] $end
$var wire 32 k num2 [31:0] $end
$var wire 1 P rd_en $end
$var wire 1 % rst $end
$var wire 1 F wr_en $end
$var wire 32 l wdata [31:0] $end
$var reg 32 m a1 [31:0] $end
$var reg 32 n a2 [31:0] $end
$var reg 32 o rdata [31:0] $end
$var reg 32 p result [31:0] $end
$var integer 32 q i [31:0] $end
$upscope $end
$scope module ig $end
$var wire 1 H unsign $end
$var wire 7 r opcode [6:0] $end
$var wire 32 s Instruction [31:0] $end
$var reg 32 t Immediate_Value [31:0] $end
$upscope $end
$scope module im $end
$var wire 32 u Address [31:0] $end
$var reg 32 v Instruction [31:0] $end
$upscope $end
$scope module pc $end
$var wire 32 w ALU_out [31:0] $end
$var wire 1 x auipc $end
$var wire 1 R br_taken $end
$var wire 1 ! clk $end
$var wire 1 " hard_write $end
$var wire 1 % rst $end
$var reg 32 y PC [31:0] $end
$upscope $end
$scope module rf $end
$var wire 1 ! clk $end
$var wire 5 z raddr1 [4:0] $end
$var wire 5 { raddr2 [4:0] $end
$var wire 1 L reg_wr $end
$var wire 1 % rst $end
$var wire 5 | waddr [4:0] $end
$var wire 32 } wdata [31:0] $end
$var reg 32 ~ rdata1 [31:0] $end
$var reg 32 !" rdata2 [31:0] $end
$var reg 32 "" x0 [31:0] $end
$var reg 32 #" x1 [31:0] $end
$var reg 32 $" x10 [31:0] $end
$var reg 32 %" x11 [31:0] $end
$var reg 32 &" x12 [31:0] $end
$var reg 32 '" x13 [31:0] $end
$var reg 32 (" x14 [31:0] $end
$var reg 32 )" x15 [31:0] $end
$var reg 32 *" x16 [31:0] $end
$var reg 32 +" x17 [31:0] $end
$var reg 32 ," x18 [31:0] $end
$var reg 32 -" x19 [31:0] $end
$var reg 32 ." x2 [31:0] $end
$var reg 32 /" x20 [31:0] $end
$var reg 32 0" x21 [31:0] $end
$var reg 32 1" x22 [31:0] $end
$var reg 32 2" x23 [31:0] $end
$var reg 32 3" x24 [31:0] $end
$var reg 32 4" x25 [31:0] $end
$var reg 32 5" x26 [31:0] $end
$var reg 32 6" x27 [31:0] $end
$var reg 32 7" x28 [31:0] $end
$var reg 32 8" x29 [31:0] $end
$var reg 32 9" x3 [31:0] $end
$var reg 32 :" x30 [31:0] $end
$var reg 32 ;" x31 [31:0] $end
$var reg 32 <" x4 [31:0] $end
$var reg 32 =" x5 [31:0] $end
$var reg 32 >" x6 [31:0] $end
$var reg 32 ?" x7 [31:0] $end
$var reg 32 @" x8 [31:0] $end
$var reg 32 A" x9 [31:0] $end
$var integer 32 B" i [31:0] $end
$upscope $end
$upscope $end
$scope module top $end
$scope module al $end
$upscope $end
$scope module bcond $end
$upscope $end
$scope module cont $end
$upscope $end
$scope module dmem $end
$upscope $end
$scope module ig $end
$upscope $end
$scope module im $end
$upscope $end
$scope module pc $end
$upscope $end
$scope module rf $end
$upscope $end
$upscope $end
$scope module top $end
$scope module al $end
$upscope $end
$scope module bcond $end
$upscope $end
$scope module cont $end
$upscope $end
$scope module dmem $end
$upscope $end
$scope module ig $end
$upscope $end
$scope module im $end
$upscope $end
$scope module pc $end
$upscope $end
$scope module rf $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx B"
bx A"
bx @"
bx ?"
bx >"
bx ="
bx <"
bx ;"
bx :"
bx 9"
bx 8"
bx 7"
bx 6"
bx 5"
bx 4"
bx 3"
bx 2"
bx 1"
bx 0"
bx /"
bx ."
bx -"
bx ,"
bx +"
bx *"
bx )"
bx ("
bx '"
bx &"
bx %"
bx $"
bx #"
bx ""
bx !"
bx ~
bx }
bx |
bx {
bx z
bx y
zx
bx w
bx v
bx u
b0 t
bx s
bx r
bx q
bx p
bx o
b100 n
bx m
bx l
b100 k
b10 j
bx i
b0 h
b111 g
b0 f
bx e
bx d
bx c
bx b
bx a
bx `
b111 _
bx ^
b0 ]
bx \
bx [
bx Z
bx Y
bx X
bx W
b0 V
bx U
bx T
b0 S
0R
b111 Q
0P
bx O
bx N
bx M
0L
bx K
0J
0I
0H
b0 G
0F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
bx 6
bx 5
bx 4
bx 3
bx 2
bx 1
bx 0
bx /
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
1%
b100 $
b10 #
z"
1!
$end
#5000
0!
#10000
0%
b0 O
b0 o
b0 W
b0 ^
b0 i
b0 w
b0 X
b0 [
b0 Y
b0 \
b0 M
b0 `
b0 l
b0 !"
b0 N
b0 a
b0 ~
b10 G
b10 h
1P
1I
1L
b11 r
b10 d
b0 c
b11 b
b1000 |
b0 {
b0 z
b100 n
b0 m
b0 Z
b0 }
b10010000000011 U
b10010000000011 e
b10010000000011 s
b10010000000011 v
b0 ,
b0 ;"
b0 -
b0 :"
b0 /
b0 8"
b0 0
b0 7"
b0 1
b0 6"
b0 2
b0 5"
b0 3
b0 4"
b0 4
b0 3"
b0 5
b0 2"
b0 6
b0 1"
b0 7
b0 0"
b0 8
b0 /"
b0 :
b0 -"
b0 ;
b0 ,"
b0 <
b0 +"
b0 =
b0 *"
b0 >
b0 )"
b0 ?
b0 ("
b0 @
b0 '"
b0 A
b0 &"
b0 B
b0 %"
b0 C
b0 $"
b0 &
b0 A"
b0 '
b0 @"
b0 (
b0 ?"
b0 )
b0 >"
b0 *
b0 ="
b0 +
b0 <"
b0 .
b0 9"
b0 9
b0 ."
b0 D
b0 #"
b0 E
b0 ""
b0 T
b0 u
b0 y
b100000000 q
b100000 B"
1!
#15000
0!
#20000
b100 Z
b100 }
b100 O
b100 o
b100 W
b100 ^
b100 i
b100 w
b100 Y
b100 \
b100 V
b100 t
b1001 |
b100 {
b10000000010010010000011 U
b10000000010010010000011 e
b10000000010010010000011 s
b10000000010010010000011 v
b100 T
b100 u
b100 y
b0 K
b0 p
1!
#25000
0!
#30000
b10 m
1"
b11000 Y
b11000 \
b100000 W
b100000 ^
b100000 i
b100000 w
0R
b1100 Z
b1100 }
b1000 X
b1000 [
b100 M
b100 `
b100 l
b100 !"
b11000 V
b11000 t
b0 Q
b0 _
b0 g
1J
b0 G
b0 h
0P
1I
0L
b1100011 r
b0 d
b1100011 b
b11000 |
b1001 {
b1000 z
b100101000000110001100011 U
b100101000000110001100011 e
b100101000000110001100011 s
b100101000000110001100011 v
b100 &
b100 A"
b1000 T
b1000 u
b1000 y
1!
#35000
0!
#40000
0"
b0 Y
b0 \
b10 O
b10 o
b0 M
b0 `
b0 l
b0 !"
b0 V
b0 t
b10 G
b10 h
1P
1L
b111 Q
b111 _
b111 g
1I
0J
b0 W
b0 ^
b0 i
b0 w
b11 r
b10 d
b11 b
b1000 |
b0 {
b0 z
b0 X
b0 [
b10 Z
b10 }
b10010000000011 U
b10010000000011 e
b10010000000011 s
b10010000000011 v
b0 T
b0 u
b0 y
1!
#45000
0!
#50000
b100 Z
b100 }
b100 O
b100 o
b100 W
b100 ^
b100 i
b100 w
b100 Y
b100 \
b100 V
b100 t
b1001 |
b100 {
b10000000010010010000011 U
b10000000010010010000011 e
b10000000010010010000011 s
b10000000010010010000011 v
b10 '
b10 @"
b100 T
b100 u
b100 y
1!
#55000
0!
#60000
b11000 Y
b11000 \
b100000 W
b100000 ^
b100000 i
b100000 w
0R
b1100 Z
b1100 }
b1000 X
b1000 [
b100 M
b100 `
b100 l
b100 !"
b10 N
b10 a
b10 ~
b11000 V
b11000 t
b0 Q
b0 _
b0 g
1J
b0 G
b0 h
0P
1I
0L
b1100011 r
b0 d
b1100011 b
b11000 |
b1001 {
b1000 z
b100101000000110001100011 U
b100101000000110001100011 e
b100101000000110001100011 s
b100101000000110001100011 v
b1000 T
b1000 u
b1000 y
1!
#65000
0!
#70000
b1100 Y
b1100 \
1R
b1100 V
b1100 t
b10 Q
b10 _
b10 g
1I
1J
b11000 W
b11000 ^
b11000 i
b11000 w
b100 d
b1100 |
b1100 X
b1100 [
b10000 Z
b10000 }
b100101000100011001100011 U
b100101000100011001100011 e
b100101000100011001100011 s
b100101000100011001100011 v
b1100 T
b1100 u
b1100 y
1!
#75000
0!
#80000
0R
b10 Y
b10 \
b10000000000000000000 O
b10000000000000000000 o
b10 M
b10 `
b10 l
b10 !"
b100 N
b100 a
b100 ~
b0 V
b0 t
b111 S
b111 ]
b111 f
b1 G
b1 h
1P
1L
b111 Q
b111 _
b111 g
0I
0J
b10 W
b10 ^
b10 i
b10 w
b110011 r
b0 d
b100000 c
b110011 b
b1001 |
b1000 {
b1001 z
b100 X
b100 [
b10 Z
b10 }
b1000000100001001000010010110011 U
b1000000100001001000010010110011 e
b1000000100001001000010010110011 s
b1000000100001001000010010110011 v
b11000 T
b11000 u
b11000 y
1!
#85000
0!
#90000
1R
b11111111111111111111111111101100 Y
b11111111111111111111111111101100 \
b100000 Z
b100000 }
b11111111111111111111111111101100 V
b11111111111111111111111111101100 t
b0 M
b0 `
b0 l
b0 !"
b11100 X
b11100 [
b1000 W
b1000 ^
b1000 i
b1000 w
b110 Q
b110 _
b110 g
1I
1J
b0 G
b0 h
0P
1L
b0 S
b0 ]
b0 f
b1101111 r
b111 d
b1111111 c
b1101111 b
b0 |
b1101 {
b11111 z
b11111110110111111111000001101111 U
b11111110110111111111000001101111 e
b11111110110111111111000001101111 s
b11111110110111111111000001101111 v
b10 &
b10 A"
b0 N
b0 a
b0 ~
b11100 T
b11100 u
b11100 y
1!
#95000
0!
#100000
b11000 Y
b11000 \
b10 M
b10 `
b10 l
b10 !"
b10 N
b10 a
b10 ~
b11000 V
b11000 t
b0 Q
b0 _
b0 g
1I
1J
0L
b100000 W
b100000 ^
b100000 i
b100000 w
b1100011 r
b0 d
b0 c
b1100011 b
b11000 |
b1001 {
b1000 z
b1000 X
b1000 [
b1100 Z
b1100 }
b100101000000110001100011 U
b100101000000110001100011 e
b100101000000110001100011 s
b100101000000110001100011 v
b1000 T
b1000 u
b1000 y
1!
#105000
0!
#110000
b1000 Y
b1000 \
0R
b0 N
b0 a
b0 ~
b1000 V
b1000 t
b10 G
b10 h
1F
b111 Q
b111 _
b111 g
1I
0J
b1000 W
b1000 ^
b1000 i
b1000 w
b100011 r
b10 d
b100011 b
b1000 |
b1000 {
b0 z
b0 X
b0 [
b10000000000000000000 Z
b10000000000000000000 }
b100000000010010000100011 U
b100000000010010000100011 e
b100000000010010000100011 s
b100000000010010000100011 v
b100000 T
b100000 u
b100000 y
1!
#115000
0!
#120000
b10 Z
b10 }
b10 O
b10 o
b1000 V
b1000 t
1P
1L
b10 G
b10 h
0F
1I
b11 r
b11 b
b1010 |
b100000000010010100000011 U
b100000000010010100000011 e
b100000000010010100000011 s
b100000000010010100000011 v
b100100 T
b100100 u
b100100 y
1!
#125000
0!
#130000
b0 Y
b0 \
b101000 W
b101000 ^
b101000 i
b101000 w
1R
b101100 Z
b101100 }
b101000 X
b101000 [
b0 M
b0 `
b0 l
b0 !"
b0 V
b0 t
b110 Q
b110 _
b110 g
1J
b0 G
b0 h
0P
1I
1L
b1101111 r
b0 d
b1101111 b
b0 |
b0 {
b1101111 U
b1101111 e
b1101111 s
b1101111 v
b10 C
b10 $"
b10 K
b10 p
b101000 T
b101000 u
b101000 y
1!
#135000
0!
#140000
1!
#140001
